{"meta":{"title":"biglovewheat","subtitle":"","description":"","author":"biglovewheat","url":"https://biglovewheat.gihub.io","root":"/"},"pages":[{"title":"分类","date":"2022-07-25T08:47:31.000Z","updated":"2022-07-26T03:10:57.675Z","comments":true,"path":"categories/index.html","permalink":"https://biglovewheat.gihub.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2022-07-25T08:39:39.000Z","updated":"2022-07-26T03:08:43.741Z","comments":true,"path":"tags/index.html","permalink":"https://biglovewheat.gihub.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Rocketmq-DLeger-集群安装","slug":"rocketmq-dleger-集群安装","date":"2022-07-26T06:41:00.009Z","updated":"2022-07-26T06:39:33.000Z","comments":true,"path":"2022/07/26/rocketmq-dleger-集群安装/","link":"","permalink":"https://biglovewheat.gihub.io/2022/07/26/rocketmq-dleger-%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/","excerpt":"","text":"Rocketmq-DLeger-集群安装官方文档More Info: 官方文档 More Info: rocketmq-dashbord 部署主机123172.31.34.25 aws-sit-app-01 172.31.43.98 aws-sit-app-03172.31.43.45 aws-sit-app-04 配置文件123456789101112131415161718/data/rocketmq/conf/dledger/broker-n*.confbrokerClusterName = RaftClusterbrokerName=RaftNode00listenPort=30911namesrvAddr=172.31.34.25:9876;172.31.43.98:9876;172.31.43.45:9876storePathRootDir=/tmp/rmqstore/node00storePathCommitLog=/tmp/rmqstore/node00/commitlogenableDLegerCommitLog=truedLegerGroup=RaftNode00dLegerPeers=n0-172.31.34.25:40911;n1-172.31.43.98:40911;n2-172.31.43.45:40911##每个节点更改n0、n1、n2dLegerSelfId=n0sendMessageThreadPoolNums=4##自动创建topicautoCreateTopicEnable = true## 执行broker ip（多网卡适用）#brokerIP1=10.19.73.64 启动脚本1234567891011#!/bin/shexport JAVA_HOME=/data/soft/jdk1.8.0_301export PATH=$JAVA_HOME/bin:$PATHROOT_PATH=/data/rocketmqnohup sh $ROOT_PATH/bin/mqnamesrv &gt; $ROOT_PATH/startup.log 2&gt;&amp;1 &amp;nohup sh $ROOT_PATH/bin/mqbroker -c $ROOT_PATH/conf/dledger/broker-n0.conf &gt;&gt; $ROOT_PATH/startup.log 2&gt;&amp;1 &amp;## mq consolenohup java -jar $ROOT_PATH/rocketmq-dashboard-1.0.1-SNAPSHOT.jar --server.port=9801 \\--rocketmq.config.namesrvAddr=tcp.farmbgy.net:29876 &gt; $ROOT_PATH/startDashboard.log 2&gt;&amp;1 &amp; service123456789101112131415161718192021cat &lt;&lt; EOF &gt; /usr/lib/systemd/system/rocketmq.service[Unit]Description=rocketmqAfter=network.target[Service]Type=forkingUser=rootExecStart=/data/rocketmq/startup.shExecStop=/data/rocketmq/stop.sh[Install]WantedBy=multi-user.targetEOFsystemctl daemon-reloadsystemctl enable rocketmqsystemctl start rocketmqsystemctl stop rocketmq","categories":[{"name":"middleware","slug":"middleware","permalink":"https://biglovewheat.gihub.io/categories/middleware/"}],"tags":[{"name":"middleware","slug":"middleware","permalink":"https://biglovewheat.gihub.io/tags/middleware/"},{"name":"mq","slug":"mq","permalink":"https://biglovewheat.gihub.io/tags/mq/"}]},{"title":"Jenkins-Systemd-发布脚本","slug":"jenkins-systemd-发布脚本","date":"2022-07-26T06:40:59.558Z","updated":"2022-07-26T06:39:27.000Z","comments":true,"path":"2022/07/26/jenkins-systemd-发布脚本/","link":"","permalink":"https://biglovewheat.gihub.io/2022/07/26/jenkins-systemd-%E5%8F%91%E5%B8%83%E8%84%9A%E6%9C%AC/","excerpt":"","text":"Jenkins-Systemd-发布脚本发布脚本1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465#!/bin/bash## /data/publish.sh update js hx-basic 5 4 &quot;www-test/&quot;action=$1apptype=$2svc=$3ver=$4webpath=$6## envROOT=/data#TEMP_HOME=$ROOT/tmpcase $apptype in## java&#x27;java&#x27;) if [ ! -f /usr/lib/systemd/system/$svc.service ];then if [ ! -f $ROOT/java_demo.service ];then echo &quot;java_demo.service not found&quot;; exit ; fi sed &quot;s/__SVC__/$&#123;svc&#125;/g&quot; $ROOT/java_demo.service &gt; /usr/lib/systemd/system/$svc.service systemctl daemon-reload systemctl enable $svc.service fi case $action in &#x27;restart&#x27;) systemctl restart $svc.service ;; &#x27;update&#x27;) ln -snf $ROOT/temp/$&#123;svc&#125;-$&#123;ver&#125;.jar $ROOT/app/$&#123;svc&#125;.jar systemctl restart $svc.service ;; &#x27;stop&#x27;) systemctl stop $svc.service ;; &#x27;restore&#x27;) ver=$5 ln -snf $ROOT/temp/$&#123;svc&#125;-$&#123;ver&#125;.jar $ROOT/app/$&#123;svc&#125;.jar systemctl restart $svc.service ;; *) ;; esac;;## js&#x27;js&#x27;) case $action in update) rm -rf $ROOT/webapp/$webpath mkdir -p $ROOT/webapp/$webpath tar -xf $ROOT/temp/$svc-$ver.tgz -C $ROOT/webapp/$webpath ;; restore) ver=$5 rm -rf $ROOT/webapp/$&#123;webpath&#125; mkdir -p $ROOT/webapp/$webpath tar -xf $ROOT/temp/$svc-$ver.tgz -C $ROOT/webapp/$webpath ;; *) ;; esac;;## other*);;esac Service java_demo.service123456789101112131415161718cat &lt;&lt; EOF &gt; java_demo.service[Unit]Description=__SVC__After=network.target[Service]Type=forkingUser=rootEnvironment=&quot;SVC=__SVC__&quot;ExecStart=/data/start_jar.sh start $&#123;SVC&#125;ExecReload=/bin/kill -s HUP $MAINPIDExecStop=/bin/kill -s QUIT $MAINPID#Restart=always[Install]WantedBy=multi-user.targetEOF 启动脚本12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061#!/bin/bashsvc=$2## dirAPP_HOME=/data/appLOG_HOME=/data/logsif [ ! -d $&#123;LOG_HOME&#125;/analyzeGc ]; then mkdir -p $&#123;LOG_HOME&#125;/analyzeGc; fi## nacosexport nacos_address=&quot;172.31.71.117&quot;export nacos_port=&quot;8848&quot;export nacos_namespace=&#x27;c876967c-d8dd-4318-9bf1-e7e72eb47d13&#x27;## javaexport JAVA_HOME=/data/soft/jdk-11.0.11export PATH=$JAVA_HOME/bin:$PATHexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar## app envcase $svc in&#x27;hx-schedule-algorithm&#x27;)JAVA_OPS=&quot;-Xms512m -Xmx4g -Xmn1g -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$&#123;LOG_HOME&#125;/analyzeGc/ -XX:+PrintGCDetails -verbosegc -Xloggc:$&#123;LOG_HOME&#125;/analyzeGc/gc.$&#123;svc&#125;.log&quot;;;*)JAVA_OPS=&quot;-Xms512m -Xmx2g -Xmn1g -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$&#123;LOG_HOME&#125;/analyzeGc/ -XX:+PrintGCDetails -verbosegc -Xloggc:$&#123;LOG_HOME&#125;/analyzeGc/gc.$&#123;svc&#125;.log&quot;;;esaccase $svc in#&#x27;hx-thirdparty&#x27;|&#x27;hx-sensordata&#x27;)&#x27;hx-thirdparty&#x27;)SPRING_ENV=prod ## prod,sit,local;;*)SPRING_ENV=local ## prod,sit,local;;esaccase $1 instart) nohup java $&#123;JAVA_OPS&#125; -jar $&#123;APP_HOME&#125;/$&#123;svc&#125;.jar --spring.profiles.active=$&#123;SPRING_ENV&#125; &gt;&gt; $&#123;APP_HOME&#125;/$&#123;svc&#125;.log 2&gt;&amp;1 &amp;;;restart) $0 stop $svc sleep 2 $0 start $svc;;stop) PID=`jps |grep $&#123;svc&#125;|awk &#x27;&#123;print $1&#125;&#x27;` if [ -z &quot;$PID&quot; ]; then echo &quot;no pid found. $0 no start&quot; else kill -9 $PID &amp;&amp; echo &quot;kill pid $PID success.&quot; || echo &quot;kill pid $PID failed.&quot; fi;;*) echo &quot;Usage: $0 [start|restart|update|stop|restore|log|check]&quot; exit 0esac","categories":[{"name":"devops","slug":"devops","permalink":"https://biglovewheat.gihub.io/categories/devops/"}],"tags":[{"name":"devops","slug":"devops","permalink":"https://biglovewheat.gihub.io/tags/devops/"},{"name":"jenkins","slug":"jenkins","permalink":"https://biglovewheat.gihub.io/tags/jenkins/"},{"name":"shell","slug":"shell","permalink":"https://biglovewheat.gihub.io/tags/shell/"}]},{"title":"Jenkins-K8s-发布脚本","slug":"jenkins-k8s-发布脚本","date":"2022-07-26T06:40:59.018Z","updated":"2022-07-26T03:35:32.000Z","comments":true,"path":"2022/07/26/jenkins-k8s-发布脚本/","link":"","permalink":"https://biglovewheat.gihub.io/2022/07/26/jenkins-k8s-%E5%8F%91%E5%B8%83%E8%84%9A%E6%9C%AC/","excerpt":"","text":"Jenkins-Systemd-发布脚本发布脚本1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586def createVersion() &#123; return new Date().format(&#x27;yyyyMMddHHmmss&#x27;)&#125;def _version = createVersion()def service = &#x27;hx-python-tianqi&#x27;def git_url = &#x27;http://192.168.8.1/hx-python.git&#x27;def credentialsId = &#x27;0a5e96ae-0443-4e1f-ac0a-e02b3b0e4d81&#x27;def docker_repo = &#x27;10.9.127.243:30002/dev&#x27;def namespaces = &#x27;dev&#x27;pipeline &#123; agent any stages &#123; stage(&#x27;拉取代码&#x27;) &#123; when &#123; environment name: &#x27;action&#x27;, value: &#x27;update&#x27; &#125; steps &#123; checkout([$class: &#x27;GitSCM&#x27;, branches: [[name: branch]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: credentialsId, url: git_url]]]) &#125; &#125; stage(&#x27;构建镜像&#x27;)&#123; when &#123; environment name: &#x27;action&#x27;, value: &#x27;update&#x27; &#125; steps &#123; sh &#x27;&#x27;&#x27; cat &lt;&lt; &#x27;EOF&#x27; &gt; dockerfileFROM jfloff/alpine-pythonMAINTAINER hxkjRUN cp -a /usr/share/zoneinfo/Asia/Shanghai /etc/localtimeCOPY tianqi.py /opt/app.pyRUN pip install requests pymysql beautifulsoup4 -i https://pypi.tuna.tsinghua.edu.cn/simpleWORKDIR /optENTRYPOINT [&quot;python&quot;,&quot;app.py&quot;]EOF&#x27;&#x27;&#x27; sh &quot;docker build -t $&#123;docker_repo&#125;/$&#123;service&#125;:$&#123;_version&#125; .&quot; &#125; &#125; stage(&#x27;推送镜像&#x27;)&#123; when &#123; environment name: &#x27;action&#x27;, value: &#x27;update&#x27; &#125; steps &#123; sh &quot;docker push $&#123;docker_repo&#125;/$&#123;service&#125;:$&#123;_version&#125; &quot; sh &quot;docker rmi $&#123;docker_repo&#125;/$&#123;service&#125;:$&#123;_version&#125; &quot; &#125; &#125; stage(&#x27;升级发布&#x27;)&#123; when &#123; environment name: &#x27;action&#x27;, value: &#x27;update&#x27; &#125; steps &#123; sh &quot;&quot;&quot; cat &lt;&lt; EOF &gt; $&#123;service&#125;.yamlapiVersion: batch/v1beta1kind: CronJobmetadata: name: $&#123;service&#125; namespace: $&#123;namespaces&#125;spec: schedule: &quot;*/15 * * * *&quot; jobTemplate: spec: template: spec: nodeSelector: containers: - name: $&#123;namespaces&#125; image: $&#123;docker_repo&#125;/$&#123;service&#125;:$&#123;_version&#125; imagePullPolicy: IfNotPresent restartPolicy: OnFailureEOF&quot;&quot;&quot; sh &quot;kubectl apply -f $&#123;service&#125;.yaml&quot; &#125; &#125; stage(&#x27;紧急回滚&#x27;)&#123; when &#123; environment name: &#x27;action&#x27;, value: &#x27;rollback&#x27; &#125; steps &#123; sh &quot;kubectl rollout undo deployment/$&#123;service&#125; -n $&#123;namespaces&#125;&quot; &#125; &#125; &#125;&#125;","categories":[{"name":"devops","slug":"devops","permalink":"https://biglovewheat.gihub.io/categories/devops/"}],"tags":[{"name":"devops","slug":"devops","permalink":"https://biglovewheat.gihub.io/tags/devops/"},{"name":"jenkins","slug":"jenkins","permalink":"https://biglovewheat.gihub.io/tags/jenkins/"},{"name":"k8s","slug":"k8s","permalink":"https://biglovewheat.gihub.io/tags/k8s/"}]}],"categories":[{"name":"middleware","slug":"middleware","permalink":"https://biglovewheat.gihub.io/categories/middleware/"},{"name":"devops","slug":"devops","permalink":"https://biglovewheat.gihub.io/categories/devops/"}],"tags":[{"name":"middleware","slug":"middleware","permalink":"https://biglovewheat.gihub.io/tags/middleware/"},{"name":"mq","slug":"mq","permalink":"https://biglovewheat.gihub.io/tags/mq/"},{"name":"devops","slug":"devops","permalink":"https://biglovewheat.gihub.io/tags/devops/"},{"name":"jenkins","slug":"jenkins","permalink":"https://biglovewheat.gihub.io/tags/jenkins/"},{"name":"shell","slug":"shell","permalink":"https://biglovewheat.gihub.io/tags/shell/"},{"name":"k8s","slug":"k8s","permalink":"https://biglovewheat.gihub.io/tags/k8s/"}]}